% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/distmatGen.R
\name{distmatGen}
\alias{distmatGen}
\title{Compute cost-based distances}
\usage{
distmatGen(pts, condsurf, ret = c("both", "obs", "loc"), directions = 16,
  silent = FALSE)
}
\arguments{
\item{pts}{A SpatialPoints[DataFrame] with a defined projection or a
two-column data.frame/matrix of coordinates}

\item{condsurf}{raster. Conductivity surface.}

\item{ret}{specify whether to return distances between obs-obs ("obs"),
obs-loc ("loc"), or both ("both") (default)}

\item{directions}{See \code{\link[gdistance]{transition}}.}

\item{silent}{logical. If TRUE avoids any warnings or messages.}
}
\description{
Generate a cost-based distance matrix among observations and/or between
observations and prediction locations.
}
\details{
Use the centroids of the conductivity or conductivity surface raster cells as
prediction locations.
}
\examples{
data(noise)
if (require(raster)) {
  r <- raster(extent(c(0,3,0,3)), nrows = 3, ncols = 3)
  wall.idx <- 4:5
  values(r)[-wall.idx] <- 1
  obs <- coordinates(r)[-wall.idx, ]

  ddm <- distmatGen(obs, r, ret = "obs", directions = 8)

  par(mfrow = c(2, 1))
  plot(r)
  text(obs[, 1], obs[, 2],
       col = c('red', rep('black', 6)))

  plot(dist(obs)[1:6], ddm[-1, 1],
       type = 'n',
       main = 'Distances to point 1',
       xlab = 'Euclidean distance',
       ylab = 'Cost-based distance')
  text(dist(obs)[1:6], ddm[-1, 1],
       labels = 2:7)
  abline(0, 1)
}
}

